// TODO
// 1. GET /tasks -> 목록으로 표시
// 2. 입력 -> POST /tasks (할 일 추가) -> GET /tasks (목록 갱신)

import axios from 'axios';

class {
    onCreate() {
        this.state = {
            tasks: [],
        };
        this.loadTasks();

    }

    async loadTasks() {
        const { data } = await axios.get('http://localhost:8080/tasks');
        console.log("loadTasks() data : " + data);
        this.state.tasks = data;
    }

    async addTask() {
        const title = this.getEl('title').value;
        await axios.post('http://localhost:8080/tasks', {
            title,
        });
        await this.loadTasks();
    }

    async delete(taskId) {
        await axios.delete('http://localhost:8080/tasks/' + taskId);
        await this.loadTasks();
    }

    async modify(taskId) {
        console.log(taskId);
    }

    async cancel(taskId) {
        console.log(taskId);
    }

    async update(taskId) {
        console.log(taskId);
    }
}

style {
    .show {
        display: list-item;
    }
    .hide {
        display: none;
    }
}

<h1>ToDo</h1>
<ol>
    <for|task| of=state.tasks>
        <li>
            ${task.title}
            <button type="button" on-click("modify", task.id)> 수정 </button>

            <button type="button" on-click("delete", task.id)> 삭제 </button>
        </li>
    </for>
</ol>
<p>
    <label for:scoped="title">
        할 일
    </label>
    <input type="text" id:scoped="title" key="title" />
    <button type="button" on-click("addTask")>
        추가
    </button>

</p>
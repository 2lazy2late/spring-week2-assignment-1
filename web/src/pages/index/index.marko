// TODO
// 1. GET /tasks -> 목록으로 표시
// 2. 입력 -> POST /tasks (할 일 추가) -> GET /tasks (목록 갱신)

import axios from 'axios';

class {
    onCreate() {
        this.state = {
            tasks: [],
            inputMode: false,
            modifyTaskId: -1,
        };

        this.loadTasks();
    }

    async loadTasks() {
        const { data } = await axios.get('http://localhost:8080/tasks');
        this.state.tasks = data;
    }

    async addTask() {
        const title = this.getEl('title').value;
        await axios.post('http://localhost:8080/tasks', {
            title,
        });
        await this.loadTasks();
    }

    async deleteTask(id) {
        await axios.delete('http://localhost:8080/tasks/'+id);
        await this.loadTasks();
    }

    async onDeleteButtonClick(id) {
        await this.deleteTask(id);
    }
    async modifyTask(id, title) {
        await axios.put('http://localhost:8080/tasks/'+id, {
            title,
        });
        await this.loadTasks();
    }

    async onModifyButtonClick(id) {
        this.state.inputMode = true
        this.state.modifyTaskId = id
    }
}

<h1>ToDo</h1>
<ol>
    <for|task| of=state.tasks>
        <li>
            <if (4 != task.id)>
                ${task.id} ${task.title}
            </if>
            <else><input id:scoped="id" key="task" type="text" value=task.title/>
            </else>
            <button id=task.id type="button" on-click("onModifyButtonClick", task.id)>수정</button><button type="button" on-click("onDeleteButtonClick", task.id)>삭제</button>
        </li>
    </for>
</ol>
<p>
    <label for:scoped="title">
        할 일
    </label>
    <input id:scoped="title" key="title" type="text" />
    <button type="button" on-click("addTask")>
        추가
    </button>
</p>
import axios from 'axios'

class {
  onCreate() {
    this.state = {
      tasks: [],
      flag : true,
    };

    this.loadTasks();
  }

  async loadTasks(){
    const { data } = await axios.get('http://localhost:8080/tasks');
    this.state.tasks = data;
  }

  async addTask(){

    const title = this.getEl('title').value;

    await axios.post('http://localhost:8080/tasks', {
      title,
    });
    await this.loadTasks();
  }

  async deleteTask(tagInfo){
    const id = tagInfo.srcElement.nextSibling.value;
    await axios.delete('http://localhost:8080/tasks/' + id);
    await this.loadTasks();
  }

  changeFlag(){
    this.state.flag = false;
  }

  flagCancel(){
    this.state.flag = true;
  }

  async updateTask(tagInfo){
    const title = this.getEl('updateTitle').value;
    const id = tagInfo.srcElement.nextSibling.nextSibling.value;
    await axios.put('http://localhost:8080/tasks/' + id, {
      title,
    });

    this.state.flag = true;
    await this.loadTasks();
  }
  
}

<layout>
<h1>ToDo</h1>
 <ol>
    <for|task| of=state.tasks>
          <li>
            <if(state.flag)>
              <span>${task.title}</span>
              <button on-click("changeFlag") type="button" >수정</button>
              <button on-click("deleteTask") type="button" >완료</button>
              <input type="text"  value=task.id hidden />
            </if>
            <else>
              <input id:scoped="updateTitle" type="text" key="updateTitle" value=task.title />
              <button on-click("updateTask") type="button" >확인</button>
              <button on-click("flagCancel") type="button" >취소</button>
              <input type="text"  value=task.id hidden />
            </else>
          </li>
     </for>
 </ol>
 <p>
  <label for:scoped="title">할 일</label>
  <input id:scoped="title" type="text" key="title" />
  <button on-click("addTask") type="button">추가</button>
 </p>
 </layout>


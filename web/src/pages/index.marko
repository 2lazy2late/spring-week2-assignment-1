import axios from "axios";

class {
  onCreate() {
    
    this.state = {
      tasks: [],
      updateModeIds: []
    }

    this.loadTasks();
  }

  async loadTasks(){
    const { data } = await axios.get("http://localhost:8080/tasks");
    
    this.state.tasks = data;
  }
  
  async createTask() {
    const title = this.getEl("title").value;
    await axios.post("http://localhost:8080/tasks", {
      title
    });

    await this.loadTasks();
  }

  async deleteTask(task) {
    await axios.delete(`http://localhost:8080/tasks/${task.id}`);

    await this.loadTasks();
  }

  async updateTask(task) {
    const newTitle = this.getEl("newTitle").value;
    await axios.put(`http://localhost:8080/tasks/${task.id}`, {
      title: newTitle
    });

    this.toggleUpdate(task);

    await this.loadTasks();
  }

  async toggleUpdate(task) {
    const {id} = task;
    if (!this.state.updateModeIds.find(id => id)) {
      this.state.updateModeIds.push(id);
    } else {
      this.state.updateModeIds.pop(id);
    }

    await this.loadTasks();
  }
}

<p> ToDo </p>
<ol>
  <for|task| of=state.tasks> 
    <li>
      <if(!state.updateModeIds.find(id => id === task.id))> 
        ${task.title} 
        <button type="button" on-click('toggleUpdate', task)> 수정 </button>
        <button type="button" on-click('deleteTask', task)> 완료 </button>
      </if>
      <else>
        <input type="text" value="${task.title}" key="newTitle"/>
        <button type="button" on-click('updateTask', task)> 확인 </button>
        <button type="button" on-click('toggleUpdate', task)> 취소 </button>
      </else>

    </li>
  </for>
</ol>

<label type="text" for:scoped="title">할 일</label> 
<input id:scoped="title" key="title"/>
<button type="button" on-click("createTask")> 추가 </button>

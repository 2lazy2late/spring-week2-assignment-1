/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // Spring
    id 'org.springframework.boot' version '2.3.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
}

repositories {
    // Use JCenter for resolving dependencies.
    mavenCentral()
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    // Jackson for JSON.
    implementation 'com.fasterxml.jackson.core:jackson-core:2.11.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.3'

    // Spring Web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring Validation
    /**
     * 유효성 검사를 통한 검증된 데이터를 얻기 원할때 사용합니다.
     */
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Spring Dev Tools
    /**
     * Automatic Restart  파일 수정 후 저장 시, Classpath에 존재하는 파일의 변경을 감지 후 자동으로 서버를 재시작
     * Live Reload        JS 기반 프레임워크에서의 Hot Reload역활
     */
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

}

application {
    // Define the main class for the application.
    mainClass = 'com.codesoom.assignment.App'
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}
